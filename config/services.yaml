# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.reset_password_token.lifetime: 86400
    app.moderation.email: 'moderation@avido.com'

    google_recaptcha_site_key: '%env(GOOGLE_RECAPTCHA_SITE_KEY)%'
    app.host: '%env(APP_HOST)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    #Custom Listeners
#    App\EventListener\RegistrationListener:
#        tags:
#            - { name: kernel.event_listener, event: user.registered }

    App\Security\CustomAuthenticators\AuthenticationSuccessHandler:
        class: App\Security\CustomAuthenticators\AuthenticationSuccessHandler

    App\DataFixtures\Providers\HashPasswordProvider:
        tags: [{name: nelmio_alice.faker.provider}]
#    App\DataFixtures\Providers\UserStatusProvider:
#        tags: [{name: nelmio_alice.faker.provider}]

# for custom auth
#    Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator:
#        class: Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator

#    App\Security\CustomAuthenticators\JWTAuthenticator:
#        class: App\Security\CustomAuthenticators\JWTAuthenticator
#        arguments:
#            $jwtAuthenticator: '@Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator'
